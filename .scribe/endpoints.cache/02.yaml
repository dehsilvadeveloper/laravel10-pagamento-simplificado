## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Types'
description: |-

  Endpoints for managing user types
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user-types
    metadata:
      groupName: 'User Types'
      groupDescription: |-

        Endpoints for managing user types
      subgroup: ''
      subgroupDescription: ''
      title: 'List user types'
      description: 'This endpoint lets you get a list of user types.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "data": [
                   {
                       "id": 1,
                       "name": "comum"
                   },
                   {
                       "id": 2,
                       "name": "lojista"
                   }
               ]
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
               "message": "Unauthenticated."
          }
        headers: []
        description: unauthenticated
        custom: []
      -
        status: 500
        content: |-
          {
               "message": "Internal Server Error."
          }
        headers: []
        description: 'unexpected error'
        custom: []
    responseFields:
      id:
        name: id
        description: 'The identifier of the user type.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'The name of the user type.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer E5afkPh4v3bc8g1aZ66DeVd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user-types/{id}'
    metadata:
      groupName: 'User Types'
      groupDescription: |-

        Endpoints for managing user types
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a single user type'
      description: 'This endpoint is used to return a single user type from the database.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The identifier of the user type.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "data": {
                   "id": 2,
                   "name": "comum"
               }
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
               "message": "Unauthenticated."
          }
        headers: []
        description: unauthenticated
        custom: []
      -
        status: 404
        content: |-
          {
               "message": "The user type could not be found."
          }
        headers: []
        description: 'User type not found'
        custom: []
      -
        status: 500
        content: |-
          {
               "message": "Internal Server Error."
          }
        headers: []
        description: 'unexpected error'
        custom: []
    responseFields:
      id:
        name: id
        description: 'The identifier of the user type.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'The name of the user type.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eda6VafDP1g6v48k5ce3hbZ'
    controller: null
    method: null
    route: null
    custom: []
